{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pinin\\\\Desktop\\\\clock255\\\\src\\\\Clock25+5\\\\Clock.js\",\n    _s = $RefreshSig$();\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar sessionInterval;\nvar breakInterval;\n\nconst ClockLogic = () => {\n  _s();\n\n  const [isBreak, setIsActive] = useState(false);\n  const [isSession, setIsSession] = useState(true);\n  const [session, putSession] = useState(25);\n  const [breakk, putBreakk] = useState(5);\n  const [sessionDur, setSessionDur] = useState(session * 60);\n  const [breakDur, setBreakDur] = useState(breakk * 60);\n  useEffect(() => {\n    if (sessionDur === 0) {\n      clearInterval(sessionInterval);\n      breakInterval = setInterval(() => setBreakDur(prev => prev - 1), 1000);\n      setSessionDur(session * 60);\n    }\n\n    if (breakDur === 0) {\n      clearInterval(breakInterval);\n      setBreakDur(breakk * 60);\n      setIsActive(false);\n      setIsSession(true);\n    }\n  });\n  var sessionMin = sessionDur / 60;\n  var sessionSec = sessionDur % 60;\n  var seconds = 0;\n\n  const setSessionTimerHandlerDec = () => {\n    if (isSession === false) {\n      putSession(previousLength => previousLength - 1);\n      setSessionDur(previousLength => previousLength - 60);\n    }\n  };\n\n  const setSessionTimerHandlerInc = () => {};\n\n  const setBreakTimerHandler = () => {}; //lo que tengo que hacer es crear un sistema en el que al descontar un minuto instantaneamente me dibuje 59 segundos del lado de los segundos.\n  //\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"25+5 I love C o C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        id: \"wason1\",\n        children: \"session length\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: setSessionTimerHandlerDec,\n        id: \"down\",\n        children: \"down\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        id: \"wason\",\n        children: valor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"up\",\n        children: \"up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        id: \"timer-label\",\n        children: \"Session\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        id: \"time-left\",\n        children: [sessionMin, \":\", sessionSec, seconds]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"play\",\n        children: \"Play\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"pause\",\n        children: \"Pause\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"reset\",\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ClockLogic, \"vl0zRPY0lHiawxYx+CcmDlLsh48=\");\n\n_c = ClockLogic;\nexport default ClockLogic;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClockLogic\");","map":{"version":3,"names":["React","useState","useEffect","sessionInterval","breakInterval","ClockLogic","isBreak","setIsActive","isSession","setIsSession","session","putSession","breakk","putBreakk","sessionDur","setSessionDur","breakDur","setBreakDur","clearInterval","setInterval","prev","sessionMin","sessionSec","seconds","setSessionTimerHandlerDec","previousLength","setSessionTimerHandlerInc","setBreakTimerHandler","valor"],"sources":["C:/Users/pinin/Desktop/clock255/src/Clock25+5/Clock.js"],"sourcesContent":["import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport React from 'react'\r\nimport { useState, useEffect} from 'react';\r\n\r\n\r\n\r\n\r\nvar sessionInterval;\r\nvar breakInterval;\r\n\r\n\r\nconst ClockLogic=()=>{\r\n    \r\n  const [isBreak, setIsActive] = useState(false)\r\n  const [isSession, setIsSession] = useState(true)\r\n  const [session, putSession] = useState(25);\r\n  const [breakk, putBreakk] = useState(5);\r\n  const [sessionDur, setSessionDur] = useState(session*60);\r\n  const [breakDur, setBreakDur] = useState(breakk*60);\r\n       \r\n\r\n  useEffect(()=>{\r\n    if(sessionDur === 0){\r\n     clearInterval(sessionInterval);\r\n     breakInterval = setInterval(() => setBreakDur((prev)=> prev - 1),\r\n      1000);\r\n      setSessionDur(session*60)\r\n    }\r\n\r\n    if(breakDur === 0){\r\n     clearInterval(breakInterval);\r\n     setBreakDur(breakk*60)\r\n     setIsActive(false);\r\n     setIsSession(true);\r\n    }\r\n  })\r\n\r\n   var sessionMin = sessionDur/60;\r\n   var sessionSec = sessionDur%60\r\n   var seconds = 0 \r\n\r\n  const setSessionTimerHandlerDec =()=>{\r\n    if(isSession === false){\r\n      putSession((previousLength) => previousLength - 1);\r\n      setSessionDur((previousLength) => previousLength - 60);\r\n    }\r\n  }\r\n\r\n  const setSessionTimerHandlerInc =()=>{\r\n    \r\n  }\r\n\r\n  const setBreakTimerHandler=()=>{\r\n\r\n  }\r\n//lo que tengo que hacer es crear un sistema en el que al descontar un minuto instantaneamente me dibuje 59 segundos del lado de los segundos.\r\n//\r\n          \r\n            return (\r\n                <>\r\n                 <h2>25+5 I love C o C</h2>\r\n                 <div className='d-flex justify-content-center'>\r\n                    \r\n                 <h2 id=\"wason1\">session length</h2>\r\n    <button onClick={setSessionTimerHandlerDec} id=\"down\">down</button>\r\n    <h3 id=\"wason\">{valor}</h3>\r\n    <button id=\"up\">up</button>\r\n                    \r\n                  </div>\r\n                   <div>\r\n                     <h3 id=\"timer-label\">Session</h3>\r\n                     <h1 id=\"time-left\">{sessionMin}:{sessionSec}{seconds}</h1>\r\n                     <button id=\"play\" >Play</button>\r\n                     <button id=\"pause\">Pause</button>\r\n                     <button id=\"reset\" >Reset</button>\r\n                   </div>\r\n                </>\r\n            )\r\n          \r\n}\r\n\r\nexport default ClockLogic\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}